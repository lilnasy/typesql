import { Client, Pool } from 'pg'

export type Select06Params = {
	ids: number[];
	names: string[];
}

export type Select06Result = {
	id: number;
}

export async function select06(client: Client | Pool, params: Select06Params): Promise<Select06Result[]> {
	const sql = `
	SELECT id
	FROM mytable2
	WHERE id IN (${generatePlaceholders(params.ids)})
	AND name IN (${generatePlaceholders(params.names)})
	`
	return client.query({ text: sql, rowMode: 'array', values: [...params.ids, ...params.names] })
		.then(res => res.rows.map(row => mapArrayToSelect06Result(row)));
}

let currentIndex = 0;
function generatePlaceholders(paramsArray: any[]): string {
	return paramsArray
		.map(() => {
			currentIndex++;
			return `$${currentIndex}`;
		})
		.join(', ');
}

function mapArrayToSelect06Result(data: any) {
	const result: Select06Result = {
		id: data[0]
	}
	return result;
}